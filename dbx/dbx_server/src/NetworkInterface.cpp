#include "NetworkInterface.h"


// 头文件规则有问题，存在隐性依赖，必须包含lindef.h才能正确使用lindef.h中包含的某个头文件，这些头文件是相互依赖的。
// 任何一个头文件的修改都会引起所有的文件重新编译，不仅仅是包含这个头文件的编译单元。隐性依赖的逻辑混乱也让使用者莫名其妙。
//#include "trace.h"
#include "lindef.h"	// 包含lindef.h来使用trace.h
#include "Sock.h"	// 使用Sock.h必先包含lindef.h，依赖其中的声明

NetworkInterface::NetworkInterface()
{
	TRACE0_L2( "NetworkInterface init..." );
	m_linkCtrl = CreateLinkCtrl();

}

void NetworkInterface::Listen(const BYTE *p_addr, int *p_port, ILinkSink *p_sink, DWORD p_dwFlags)
{

}

HRESULT NetworkInterface::Send(AppMsg *p_appMsg)
{
}

HRESULT NetworkInterface::Recv(BYTE *p_buff, int p_size)
{}

